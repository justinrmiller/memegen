<project name="MemeGen" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>
        MemeGen
    </description>

    <!-- Global Properties -->
    <property name="build.dir" location="build"/>
    <property name="conf.dir" location="conf"/>
    <property name="dist.dir" location="dist"/>
    <property name="dist.lib.dir" location="dist/lib"/>
    <property name="lib.dir" location="lib"/>
    <property name="memes.dir" location="memes"/>
    <property name="scripts.dir" location="scripts"/>
    <property name="src.dir" location="src"/>
    <property name="test.dir" location="test"/>
    <property name="test.classes.dir" location="testclasses"/>
    <property name="test.report.dir" location="testreport"/>
    <property name="manifest.main-class" value="com.justinrmiller.memegen.MemeGen"/>

    <!-- JARs -->
    <path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="compile.java">
        <mkdir dir="${build.dir}"/>

        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="compile.classpath"/>
    </target>

    <target name="compile.test" depends="compile.java">
        <mkdir dir="${test.classes.dir}"/>
        <javac srcdir="${test.dir}" destdir="${test.classes.dir}">
            <classpath>
                <path refid="compile.classpath"/>
                <pathelement location="${build.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="compile" depends="compile.java, compile.test"/>

    <target name="dist" depends="resolve, compile" description="">
        <!-- Convert project class path to string property -->
        <pathconvert property="manifest.classpath" pathsep=" ">
            <path refid="compile.classpath"/>
            <mapper>
                <chainedmapper>
                    <flattenmapper/>
                    <globmapper from="*" to="lib/*" casesensitive="no"/>
                </chainedmapper>
            </mapper>
        </pathconvert>

        <delete failonerror="false" verbose="true" includeemptydirs="true">
            <fileset dir="${dist.dir}">
                <include name="**/*" />
            </fileset>
        </delete>

        <!-- Create dist and dependant lib directory -->
        <mkdir dir="${dist.dir}/"/>
        <mkdir dir="${dist.lib.dir}/"/>

        <mkdir dir="${dist.dir}/log" />
        <mkdir dir="${dist.dir}/conf" />
        <mkdir dir="${dist.dir}/bin" />

        <copy todir="${dist.dir}/scripts" verbose="true">
            <fileset dir="${scripts.dir}" />
        </copy>

        <copy todir="${dist.dir}/memes" verbose="true">
            <fileset dir="${memes.dir}" />
        </copy>

        <copy todir="${dist.dir}/conf" verbose="true">
            <fileset dir="${conf.dir}" />
        </copy>

        <!-- Put everything in ${build.dir} into the ${ant.project.name}.jar file -->
        <jar jarfile="${dist.dir}/${ant.project.name}.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="${manifest.main-class}"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
        </jar>

        <!-- Copy in the JAR dependencies -->
        <copy todir="${dist.lib.dir}">
            <fileset dir="${lib.dir}"/>
        </copy>
    </target>

    <target name="tarball">
        <tar destfile="memegenserver.tgz"
             basedir="${dist.dir}"
             compression="gzip"
                />
    </target>

    <target name="clean" description="Clean the project">
        <delete dir="${build.dir}"/>

        <delete failonerror="false" verbose="true" includeemptydirs="true">
            <fileset dir="${dist.dir}">
                <include name="**/*" />
            </fileset>
        </delete>

        <delete dir="${test.classes.dir}"/>
        <delete dir="${test.report.dir}"/>
    </target>

    <target name="resolve">
        <ivy:settings file="ivy-settings.xml"/>
        <ivy:retrieve/>
    </target>

    <target name="test" description="Run unit tests for the project">
        <mkdir dir="${test.report.dir}"/>
        <property name="tests" value="*Test"/>
        <junit fork="yes" printsummary="yes" haltonerror="yes" haltonfailure="yes">
            <formatter type="plain" usefile="false"/>
            <batchtest todir="${test.report.dir}">
                <fileset dir="${test.dir}">
                    <include name="**/${tests}.java"/>
                    <exclude name="**/Test*All.java"/>
                </fileset>
            </batchtest>
            <classpath>
                <path refid="compile.classpath"/>
                <pathelement location="${src.dir}"/>
                <pathelement location="${test.dir}"/>
                <pathelement location="${build.dir}"/>
                <pathelement location="${test.classes.dir}"/>
            </classpath>
        </junit>
    </target>
</project>